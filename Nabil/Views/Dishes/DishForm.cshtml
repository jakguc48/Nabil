@using System.Activities.Statements
@using Nabil.Models
@model Nabil.ViewModels.DishFormViewModel


@{
    ViewBag.Title = Model.FormType;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>@Model.FormType</h2>

@using (Html.BeginForm("Save", "Dishes", FormMethod.Post,
    new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary()

    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Dish.Name)

        @Html.LabelFor(m => m.Kcal)
        @Html.TextBoxFor(m => m.Kcal, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Dish.Kcal)

        @Html.LabelFor(m => m.Weight)
        @Html.TextBoxFor(m => m.Weight, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Dish.Weight)

        @Html.LabelFor(m => m.Price)
        @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Dish.Price)

        @Html.LabelFor(m => m.DishType)
        @Html.DropDownListFor(m => m.DishType,
            new SelectList(
                Model.DishTypeDictionary,
                "Key",
                "Value"), new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.DishType)

        @Html.LabelFor(m => m.Description)
        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Dish.Description)

        <h4>Opcjonalnie:</h4>
        @Html.LabelFor(m => m.PriceSmall)
        @Html.TextBoxFor(m => m.PriceSmall, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Dish.PriceSmall)

        @Html.LabelFor(m => m.WeightSmall)
        @Html.TextBoxFor(m => m.WeightSmall, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Dish.WeightSmall)

        <br />

        @if (Model.FormType.Equals("Nowe danie"))
        {
            @Html.LabelFor(m => m.ImgUrl)
            <input type="file" name="UploadImage" id="UploadImage" />
        }

        <br/>

        <div class="form-check">
            @Html.CheckBoxFor(m => m.GluteFree)
            <label>
                Danie bezglutenowe?
            </label>
        </div>




    </div>
    <center>
    @if (Model.FormType.Equals("Nowe danie"))
    {
        <input type="submit" class="btn btn-primary" data-confirm="Dodać nowe danie?" value="Dodaj danie">
    }
    else
    {
        <input type="submit" class="btn btn-primary" data-confirm="Zapisać zmiany?" value="Zapisz zmiany">
    }
    </center>

    <br />
    <br />
    <br />
    @Html.ActionLink("Powrót do listy", "Index")



    @Html.HiddenFor(m => m.Id)
    @Html.AntiForgeryToken()

}

@section scripts
{
    @Scripts.Render("~/bundles/jquery")

    <script>
        jQuery(document).ready(function () {
            jQuery('[data-confirm]').click(function (e) {
                if (!confirm(jQuery(this).attr("data-confirm"))) {
                    e.preventDefault();
                }
            });
        });
    </script>
}


